# -*- coding: utf-8 -*-

## Zemberek: Adding Dictionary Item Example 
# Java Code Example: https://github.com/ahmetaa/zemberek-nlp/blob/master/examples/src/main/java/zemberek/examples/morphology/AddNewDictionaryItem.java

import jpype as jp

# Relative path to Zemberek .jar
ZEMBEREK_PATH = '../../bin/zemberek-full.jar'

# Start the JVM
jp.startJVM(jp.getDefaultJVMPath(), '-ea', '-Djava.class.path=%s' % (ZEMBEREK_PATH))

# Import the required Java classes
TurkishMorphology = jp.JClass('zemberek.morphology.TurkishMorphology')
DictionaryItem = jp.JClass('zemberek.morphology.lexicon.DictionaryItem')
RootAttribute = jp.JClass('zemberek.core.turkish.RootAttribute')
PrimaryPos = jp.JClass('zemberek.core.turkish.PrimaryPos')
SecondaryPos = jp.JClass('zemberek.core.turkish.SecondaryPos')

# Instantiating the morphology class with the default RootLexicon
morphology = TurkishMorphology.createWithDefaults()

# Adding and parsing the dictionary item
def test (inp, newItem):
	print('Parses for %s before adding %s' % (inp, newItem))
	before = morphology.analyze(inp)
	printResults(before)

	morphology.invalidateCache()
	morphology.getMorphotactics().getStemTransitions().addDictionaryItem(newItem)

	print('Parses for %s after adding %s' % (inp, newItem))
	after = morphology.analyze(inp)
	printResults(after)

# Printing the results...
def printResults (results):
	i = 1
	if not results: print('No Analysis.')
	for result in results.analysisResults:
		rstr = result.formatLong() + '\n'
		if result.getDictionaryItem().attributes.contains(RootAttribute.Runtime):
				rstr += ' (Generated by UnidentifiedTokenParser)\n'
		print('%d - %s' % (i, rstr))
		i += 1

# Passing the dummy data
test('Meeeydan\'a', DictionaryItem('Meeeydan', 'meeeydan', 'meeeydan', PrimaryPos.Noun, SecondaryPos.ProperNoun))

# Shutting down the JVM
jp.shutdownJVM()
